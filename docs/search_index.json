[
["index.html", "Using GIS for invasive species research 1 Overview 1.1 Project objectives 1.2 Get started…", " Using GIS for invasive species research Anthony Davidson 2019-09-06 1 Overview This respository contains a collection of dynamic programming tools and introductory tutorials for GIS in R. 1.1 Project objectives The overall objective is to create a landing page and collection of GIS work in R. All the examples will focus on invasive species dynamics for now but will extend to other areas of ecology and research. The current set of goals for this project also meet the requirements needed to produce the figures for my personal reproducible phd research. 1.1.1 Objective One Produce static maps for the first publication of my PhD. Draft here - Davidson2019a Datasets Beech forest dataset Grid locations are can be downloaded as a kmz or kml file. This is currently labedl “invasive-species-location-research.kml” here NZ basic map examples are here under resources chapter NZ Forest vegetation data comes from … and saved as \"\" here 1.1.2 Objective Two Produce static maps for the following data-set [Davidson2019b] [same as above] 1.1.3 Objective Three Produce static maps for the following data-set [Davidson2019c] [same as above] 1.2 Get started… Fork this repo here Pull project into Rstudio using version control. 1567561101782 Ensure that your local RStudio packages are up to date. For more details this following the same contributing options as the website instructions here. Note This book is built from the absolute minimum you need to start a bookdown book. You can find the preview of the unmodified template of the book at http://seankross.com/bookdown-start/ All of the content of this repository is licensed CC0. The content of the mapping/GIS was orginally forked from from the following github repositories: Creating maps in R: A textbook on geocomputational analysis in R 1.2.1 Packages To run this book in RStudio the following packages are needed. tidyverse MapView: a 3D interactive R packages Video "],
["introduction.html", " 2 Introduction 2.1 Data", " 2 Introduction Creating maps using spatial data in R GIS is an area of R coding I have kept away from hoping that I would work it out at a later date. Sadly, it has got to the point where I want to be able to build more complex maps in shiny applications towards the end of my PhD and need to create a base of code to go from. Luckily, the text book “Spatial Analysis in R” has just come out in its second edition and is available in as a bookdown repository including the full text here. This page is a outline of the current resources I am working on and using for my publication and website maps. I have begun by using my normal reproducible workflow and file structure. The full set of resources is currently on a private repository. 2.1 Data {: .box-note} Note: This can currently me modified and changed by anyone with the link. As it comes more important for the dataset to not be modified by others we will tighten this process up using the leaflet and shiny app process we are using for the mapping and analysis at the bottom of this post. "],
["divingin.html", " 3 Diving In 3.1 kml to tidy dataset", " 3 Diving In There are plenty of github repositories explaining the different types of GIS and using R. Below is the public google-my-maps map that can be modified an worked on from within the window provided below. 3.1 kml to tidy dataset Import data from downloaded kml file from the my-maps data. Download the kml file from online (NOT the kmz file) {.:Note} A KMZ file is just a zipped KML file, possibly with associated embedded images, icons, etc. So any program that supports KMZ files internally unzips them to access their KML files. That may be a reason why many open source programs do not bother supporting KMZ once KML support is implemented: you just need to use an additional unzipping library of your choice, to convert the KMZ to KML. The linked posts give some JavaScript-based solutions for unzipping. source(&quot;./R/kml_to_tidy.R&quot;) ## -- Attaching packages ---------------------------------------------------- tidyverse 1.2.1 -- ## v ggplot2 3.2.1 v readr 1.3.1 ## v tibble 2.1.3 v purrr 0.3.2 ## v tidyr 0.8.3 v stringr 1.4.0 ## v ggplot2 3.2.1 v forcats 0.4.0 ## -- Conflicts ------------------------------------------------------- tidyverse_conflicts() -- ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() ## Multiple layers are present in data source C:\\Code\\Creating-maps-in-R\\data\\invasive-species-NAH-research.kml, reading layer `Hollyford&#39;. ## Use `st_layers&#39; to list all layer names and their type in a data source. ## Set the `layer&#39; argument in `st_read&#39; to read a particular layer. ## Warning in evalq((function (..., call. = TRUE, immediate. = FALSE, ## noBreaks. = FALSE, : automatically selected the first layer in a data ## source containing more than one. ## Reading layer `Hollyford&#39; from data source `C:\\Code\\Creating-maps-in-R\\data\\invasive-species-NAH-research.kml&#39; using driver `KML&#39; ## Simple feature collection with 10 features and 2 fields ## geometry type: GEOMETRY ## dimension: XYZ ## bbox: xmin: 167.9963 ymin: -45.06019 xmax: 168.1392 ymax: -44.70935 ## epsg (SRID): 4326 ## proj4string: +proj=longlat +datum=WGS84 +no_defs ## Observations: 10 ## Variables: 3 ## $ Name &lt;fct&gt; Gunns Camp, Choqenout and Ruscoe 2000, Hollyford V... ## $ Description &lt;fct&gt; &quot;&quot;, &quot;Eglinton Valley&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;,... ## $ geometry &lt;GEOMETRY [°]&gt; POINT Z (168.1392 -44.76039 0), POINT Z (... tidy.kat ## # A tibble: 12 x 7 ## folder name description styleUrl longitude latitude altitude ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Hollyford Gunns Camp &lt;NA&gt; #icon-1899~ 168. -44.8 0 ## 2 Hollyford Choqenout~ Eglinton V~ #icon-1899~ 168. -45.1 0 ## 3 Hollyford Hollyford~ &lt;NA&gt; #icon-1899~ 168. -44.8 0 ## 4 Hollyford Hollyford~ &lt;NA&gt; #icon-1899~ 168. -44.7 0 ## 5 Hollyford Point 9 &lt;NA&gt; #icon-1899~ 168. -44.8 0 ## 6 Hollyford Point 10 x = 10, y ~ #icon-1899~ 168. -44.9 0 ## 7 Eglinton~ MR1 &lt;NA&gt; #icon-1899~ 168. -44.9 0 ## 8 Eglinton~ M1 &lt;NA&gt; #icon-1899~ 168. -44.9 0 ## 9 Eglinton~ M1 &lt;NA&gt; #icon-1899~ 168. -44.9 0 ## 10 Eglinton~ R1 &lt;NA&gt; #icon-1899~ 168. -44.9 0 ## 11 Eglinton~ MR1 &lt;NA&gt; #icon-1899~ 168. -44.9 0 ## 12 Eglinton~ R1 &lt;NA&gt; #icon-1899~ 168. -44.9 0 3.1.1 Save Save csv data for arcGIS work from here as: write.csv(tidy.kat, &quot;./data/kml_tidy_data.csv&quot;) "],
["wnp.html", " 4 Work in progress 4.1 Building maps for manuscripts", " 4 Work in progress library(tidyverse) ## -- Attaching packages ---------------------------------------------------- tidyverse 1.2.1 -- ## v ggplot2 3.2.1 v purrr 0.3.2 ## v tibble 2.1.3 v dplyr 0.8.3 ## v tidyr 0.8.3 v stringr 1.4.0 ## v readr 1.3.1 v forcats 0.4.0 ## -- Conflicts ------------------------------------------------------- tidyverse_conflicts() -- ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(kableExtra) ## ## Attaching package: &#39;kableExtra&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## group_rows source(&quot;./R/kml_to_tidy.R&quot;) ## Linking to GEOS 3.6.1, GDAL 2.2.3, PROJ 4.9.3 ## ## Attaching package: &#39;geojsonio&#39; ## The following object is masked from &#39;package:base&#39;: ## ## pretty ## Multiple layers are present in data source C:\\Code\\Creating-maps-in-R\\data\\invasive-species-NAH-research.kml, reading layer `Hollyford&#39;. ## Use `st_layers&#39; to list all layer names and their type in a data source. ## Set the `layer&#39; argument in `st_read&#39; to read a particular layer. ## Warning in evalq((function (..., call. = TRUE, immediate. = FALSE, ## noBreaks. = FALSE, : automatically selected the first layer in a data ## source containing more than one. ## Reading layer `Hollyford&#39; from data source `C:\\Code\\Creating-maps-in-R\\data\\invasive-species-NAH-research.kml&#39; using driver `KML&#39; ## Simple feature collection with 10 features and 2 fields ## geometry type: GEOMETRY ## dimension: XYZ ## bbox: xmin: 167.9963 ymin: -45.06019 xmax: 168.1392 ymax: -44.70935 ## epsg (SRID): 4326 ## proj4string: +proj=longlat +datum=WGS84 +no_defs ## Observations: 10 ## Variables: 3 ## $ Name &lt;fct&gt; Gunns Camp, Choqenout and Ruscoe 2000, Hollyford V... ## $ Description &lt;fct&gt; &quot;&quot;, &quot;Eglinton Valley&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;,... ## $ geometry &lt;GEOMETRY [°]&gt; POINT Z (168.1392 -44.76039 0), POINT Z (... kable(tidy.kat, formatv = &quot;markdown&quot;) folder name description styleUrl longitude latitude altitude Hollyford Gunns Camp NA #icon-1899-0288D1-nodesc 168.1392 -44.76039 0 Hollyford Choqenout and Ruscoe 2000 Eglinton Valley #icon-1899-0288D1 167.9963 -45.06019 0 Hollyford Hollyford Valley Lookout NA #icon-1899-0288D1-nodesc 168.1050 -44.80905 0 Hollyford Hollyford Airstrip NA #icon-1899-0288D1-nodesc 168.1337 -44.73744 0 Hollyford Point 9 NA #icon-1899-0288D1-nodesc 168.1262 -44.79766 0 Hollyford Point 10 x = 10, y = 250 #icon-1899-0288D1 168.0794 -44.90247 0 Eglinton Valley MR1 NA #icon-1899-F9A825-nodesc 168.0776 -44.89081 0 Eglinton Valley M1 NA #icon-1899-FBC02D-nodesc 168.1005 -44.85371 0 Eglinton Valley M1 NA #icon-1899-FBC02D-nodesc 168.0748 -44.89257 0 Eglinton Valley R1 NA #icon-1899-000000-nodesc 168.0968 -44.85569 0 Eglinton Valley MR1 NA #icon-1899-FBC02D-nodesc 168.0995 -44.85768 0 Eglinton Valley R1 NA #icon-1899-000000-nodesc 168.0789 -44.89277 0 4.1 Building maps for manuscripts These starting resources have come from chapter-8 of the geocomp book. To make this quick I have used the rmarkdown function render to create a r file that can then be sourced here for building my data specific maps. # rmarkdown::render(&quot;./03-Work-In-Progress.Rmd&quot;) # knitr::purl(&quot;./03-Work-In-Progress.Rmd&quot;, &quot;./R/03-Work-In-Progress.R&quot;, documentation = 2) source(&quot;./R/03-Work-In-Progress.R&quot;, echo = FALSE) ## Multiple layers are present in data source C:\\Code\\Creating-maps-in-R\\data\\invasive-species-NAH-research.kml, reading layer `Hollyford&#39;. ## Use `st_layers&#39; to list all layer names and their type in a data source. ## Set the `layer&#39; argument in `st_read&#39; to read a particular layer. ## Warning in evalq((function (..., call. = TRUE, immediate. = FALSE, ## noBreaks. = FALSE, : automatically selected the first layer in a data ## source containing more than one. ## Reading layer `Hollyford&#39; from data source `C:\\Code\\Creating-maps-in-R\\data\\invasive-species-NAH-research.kml&#39; using driver `KML&#39; ## Simple feature collection with 10 features and 2 fields ## geometry type: GEOMETRY ## dimension: XYZ ## bbox: xmin: 167.9963 ymin: -45.06019 xmax: 168.1392 ymax: -44.70935 ## epsg (SRID): 4326 ## proj4string: +proj=longlat +datum=WGS84 +no_defs ## Observations: 10 ## Variables: 3 ## $ Name &lt;fct&gt; Gunns Camp, Choqenout and Ruscoe 2000, Hollyford V... ## $ Description &lt;fct&gt; &quot;&quot;, &quot;Eglinton Valley&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;,... ## $ geometry &lt;GEOMETRY [°]&gt; POINT Z (168.1392 -44.76039 0), POINT Z (... ## Legend labels were too wide. The labels have been resized to 0.29, 0.29, 0.29, 0.29, 0.29, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.44, 0.29, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.29, 0.29, 0.29, 0.29, 0.29, 0.29, 0.29, 0.29, 0.29, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.29, 0.29, 0.29, 0.29, 0.29, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.47, 0.47, 0.47, 0.47, 0.47, 0.47. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.47, 0.47, 0.47, 0.47, 0.47. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.47, 0.47, 0.47, 0.47, 0.47. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.47, 0.47, 0.47, 0.47, 0.47. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.44, 0.29, 0.29, 0.29, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.44, 0.29, 0.29, 0.29, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.44, 0.29, 0.29, 0.29, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.44, 0.29, 0.29, 0.29, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.44, 0.29, 0.29, 0.29, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.44, 0.29, 0.29, 0.29, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.44, 0.29, 0.29, 0.29, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.44, 0.29, 0.29, 0.29, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.44, 0.29, 0.29, 0.29, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.44, 0.29, 0.29, 0.29, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## Legend labels were too wide. The labels have been resized to 0.44, 0.29, 0.29, 0.29, 0.29. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger. ## tmap mode set to interactive viewing ## tmap mode set to plotting ## Parsed with column specification: ## cols( ## package = col_character(), ## published = col_date(format = &quot;&quot;), ## title = col_character(), ## depends_count = col_double(), ## suggests_count = col_double(), ## tidyverse_happy = col_logical(), ## has_vignette_build = col_logical(), ## has_tests = col_logical(), ## reverse_count = col_double(), ## dl_last_month = col_double(), ## ci = col_character(), ## test_coverage = col_character(), ## forks = col_double(), ## stars = col_double(), ## watchers = col_double(), ## last_commit = col_double(), ## last_issue_closed = col_double(), ## contributors = col_double() ## ) ## Mean size error for iteration 1: 2.55875465805575 ## Mean size error for iteration 2: 1.79272875527739 ## Mean size error for iteration 3: 1.43598715415039 ## Mean size error for iteration 4: 1.25491843756565 ## Mean size error for iteration 5: 1.15398221468619 glimpse(nz) ## Observations: 16 ## Variables: 7 ## $ Name &lt;chr&gt; &quot;Northland&quot;, &quot;Auckland&quot;, &quot;Waikato&quot;, &quot;Bay of Plen... ## $ Island &lt;chr&gt; &quot;North&quot;, &quot;North&quot;, &quot;North&quot;, &quot;North&quot;, &quot;North&quot;, &quot;No... ## $ Land_area &lt;dbl&gt; 12500.5611, 4941.5726, 23900.0364, 12071.1447, 8... ## $ Population &lt;dbl&gt; 175500, 1657200, 460100, 299900, 48500, 164000, ... ## $ Median_income &lt;int&gt; 23400, 29600, 27900, 26200, 24400, 26100, 29100,... ## $ Sex_ratio &lt;dbl&gt; 0.9424532, 0.9442858, 0.9520500, 0.9280391, 0.93... ## $ geom &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((1745493 600..., MUL... 4.1.1 First tmap attempt ma1 = tm_shape(nz) + tm_fill(col = &quot;red&quot;) ma2 = tm_shape(nz) + tm_fill(col = &quot;red&quot;, alpha = 0.3) ma3 = tm_shape(nz) + tm_borders(col = &quot;blue&quot;) ma4 = tm_shape(nz) + tm_borders(lwd = 3) ma5 = tm_shape(nz) + tm_borders(lty = 2) ma6 = tm_shape(nz) + tm_fill(col = &quot;red&quot;, alpha = 0.3) + tm_borders(col = &quot;blue&quot;, lwd = 3, lty = 2) tmap_arrange(ma1, ma2, ma3, ma4, ma5, ma6) 4.1.1.1 Grey background tm_shape(nz) + tm_fill(col = &quot;black&quot;, alpha = 0.3) 4.1.1.2 Boarders tm_shape(nz) + tm_fill(col = &quot;black&quot;, alpha = 0.3) + tm_borders(col = &quot;blue&quot;) 4.1.1.3 Title and legend legend_title &lt;- expression(&quot;Area (km&quot;^2*&quot;)&quot;) tm_shape(nz) + tm_fill(col = &quot;black&quot;, alpha = 0.3) + tm_borders(col = &quot;blue&quot;) + tm_shape(nz) + tm_fill(col = &quot;Land_area&quot;, title = legend_title) + tm_borders() 4.1.1.4 North arrow tm_shape(nz) + tm_fill(col = &quot;black&quot;, alpha = 0.3) + tm_borders(col = &quot;blue&quot;) + tm_compass(type = &quot;8star&quot;, position = c(&quot;left&quot;, &quot;top&quot;)) 4.1.1.5 Scale tm_shape(nz) + tm_fill(col = &quot;black&quot;, alpha = 0.3) + tm_borders(col = &quot;blue&quot;) + tm_compass(type = &quot;8star&quot;, position = c(&quot;left&quot;, &quot;top&quot;)) + tm_scale_bar(breaks = c(0, 100, 200), text.size = 1) 4.1.1.6 Black and white tm_shape(nz) + tm_fill(col = &quot;black&quot;, alpha = 0.3) + tm_borders(lty = 2) tm_shape(world) + tm_polygons() + tm_shape(urb_1970_2030) + tm_symbols(col = &quot;black&quot;, border.col = &quot;white&quot;, size = &quot;population_millions&quot;) + tm_facets(by = &quot;year&quot;, nrow = 2, free.coords = FALSE) library(leaflet) library(leaflet.extras) "],
["outputs.html", " 5 Outputs 5.1 My Notes", " 5 Outputs Using and applying GIS techniques in R has become much easier since the additional functionality of Java-script libraries. One of these libraries in the leaflet library for mapping. Below are some examples of these mapping tools with examples. I like the idea of know what to do in arcGIS so that it is easy to work with researchers that use either R or arcGIS. For a GIS map there are two main options. Here are the resources for building interactive and static maps in R using a range of different packages: ’leaflet` 5.0.1 A single location on a map Here is the birthplace of R plotted with leaflet, addTiles and the addMarkers… 5.0.2 Leaflet plot options still coming 5.1 My Notes I have sent the following to Matt to input into arcGIS and compare rendered maps. # grid.locations &lt;- # label add hand drawn image here 5.1.1 Extracting mymaps data This is for security reasons. library(leaflet) library(leaflet.extras) Tab Name 1 Tab Name 2 "],
["tabs.html", " 6 Leaflet tabs", " 6 Leaflet tabs ## Tests {.tabset} Still working on this… Would be nice if something like this would work. And the headings and tabs function is not working. (For coding reasons not yet known by me but should be basic) "]
]
